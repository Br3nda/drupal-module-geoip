<?php
// $Id: geoip.module,v 1.4 2009/02/27 22:18:17 rz Exp $

/**
 * @file
 * API for using the MaxMind GeoLite Country database.
 */

/**
 * Implementation of hook_menu().
 */
function geoip_menu() {
  $items['admin/settings/geoip'] = array(
    'title' => 'GeoIP',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('geoip_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'geoip.admin.inc',
  );

  return $items;
}

/**
 * Implementation of hook_requirements().
 */
function geoip_requirements($phase) {
  $requirements = array();
  // Ensure translations don't break at install time
  $t = get_t();

  // Test for a valid GeoIP database
  $requirements['geoip_database'] = array(
    'title' => $t('GeoIP Database'),
  );

  $file = variable_get('geoip_data_file', FALSE);

  if (!$file || !file_exists($file)) {
    $requirements['geoip_database']['value'] = l('Missing', 'admin/settings/geoip');
    $requirements['geoip_database']['description'] = $t('The GeoIP database file is missing or not configured. Download the latest file at <a href="@url">MaxMind.com</a>.', array('@url' => 'http://www.maxmind.com/download/geoip/database/GeoIP.dat.gz'));
    $requirements['geoip_database']['severity'] = ($phase == 'runtime') ? REQUIREMENT_WARNING : REQUIREMENT_ERROR;
  }
  else {
    $mtime = filemtime($file);
    if ($mtime < strtotime('1 months ago')) {
      $requirements['geoip_database']['value'] = $t('Out of date');
      $requirements['geoip_database']['description'] = $t('The GeoIP database file is more than a month old. Download the latest file at <a href="@url">MaxMind.com</a>.', array('@url' => 'http://www.maxmind.com/download/geoip/database/GeoIP.dat.gz'));
      $requirements['geoip_database']['severity'] = REQUIREMENT_WARNING;
    }
    else {
      $requirements['geoip_database']['value'] = $t('Installed');
    }
  }

  return $requirements;
}

/**
 * Helper function to get the current ip address
 */
function geoip_ip_address() {
  if (variable_get('geoip_debug', FALSE) && $_GET['geoip_debug']) {
    $ip = $_GET['geoip_debug'];
    drupal_set_message(t('GeoIP debug mode. Using IP: %ip', array('%ip' => $ip)));
  }
  else {
    $ip = ip_address();
  }
  return $ip;
}

/**
 * Singleton wrapper around geoip_open().
 */
function geoip_instance() {
  $data_file = variable_get('geoip_data_file', FALSE);
  if (!$data_file || !file_exists($data_file)) {
    if (user_access('administer site configuration')) {
      drupal_set_message(t('Please <a href="!url">configure</a> the GeoIP data file location.', array('!url' => url('admin/settings/geoip'))));
    }
    return FALSE;
  }

  // geoip.inc is common to both database types
  module_load_include('inc', 'geoip', 'lib/geoip');

  $instance = geoip_open($data_file, GEOIP_STANDARD);

  // conditionally load the geoipcity include file
  if ($instance->databaseType == GEOIP_CITY_EDITION_REV1) {
    module_load_include('inc', 'geoip', 'lib/geoipcity');
  }

  return $instance;
}

/**
 * @defgroup geoip GeoIP Public API
 * @{
 * GeoIP Public API functions
 */

/**
 * API function to return the country code for a given IP. Defaults to using the
 * current user's IP if not specified. This function works with both the country
 * and city level databases.
 */
function geoip_country_code($ip = NULL) {
  $ip = $ip ? $ip : geoip_ip_address();
  $gi = geoip_instance();

  if (!$gi) {
    return FALSE;
  }

  $cc = geoip_country_code_by_addr($gi, $ip);

  geoip_close($gi);

  return $cc;
}

/**
 * API function to return the city data for a given IP. Defaults to using the
 * current user's IP if not specified. This function only works with the city
 * level database and will return false in all other cases.
 */
function geoip_city($ip = NULL) {
  $ip = $ip ? $ip : geoip_ip_address();
  $gi = geoip_instance();

  if (!$gi) {
    return FALSE;
  }
  elseif ($gi->databaseType != GEOIP_CITY_EDITION_REV1) {
    // If not using a city database, there is nothing to do.
    return FALSE;
  }


  $record = geoip_record_by_addr($gi, $ip);

  geoip_close($gi);

  return $record;
}

/**
 * API function to retrieve the region name, given a country code and region
 * code. This function relies on the geoipregionvars.php file, which is just a
 * huge array.
 */
function geoip_region_name($country_code, $region_code) {
  static $GEOIP_REGION_NAME;
  if (!isset($GEOIP_REGION_NAME)) {
    include drupal_get_path('module', 'geoip') .'/lib/geoipregionvars.php';
  }

  return $GEOIP_REGION_NAME[$country_code][$region_code];
}

/**
 * @} End of "defgroup geoip".
 */
